# -----------------------------------------------------------------------------
# BUILD SYSTEM
# -----------------------------------------------------------------------------

[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools >=64.0.0",
    "wheel >=0.40.0",
]


# -----------------------------------------------------------------------------
# PROJECT AND DEPENDENCIES
# -----------------------------------------------------------------------------

# General project settings and dependencies
[project]
name = "fm4ar"
version = "0.0.1"
description = "Flow matching for atmospheric retrievals of exoplanets."
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    # Add here new dependencies
    "tables==3.10.2",
    "netcal==1.3.6",
    "torchinfo==1.8.0",
    "seaborn==0.12.3",

    # Pinned dependencies
    "chainconsumer==1.1.1",
    "click==8.1.7",
    "colour-science==0.4.4",
    "corner==2.2.2",
    "deepdiff==7.0.1",
    "dill==0.3.8",
    "dynesty==2.1.3",
    "gitpython>=3.1.4",
    "glasflow==0.3.1",
    "h5py==3.11.0",
    "joblib==1.4.2",
    "matplotlib<=3.9.0",
    "multiprocess==0.70.16",
    "nautilus-sampler==1.0.3",
    "normflows==1.7.3",
    "numpy==1.26.4",
    "p-tqdm==1.4.0",
    "pandas==2.2.2",
    "pydantic==2.7.3",
    "pyyaml==6.0.1",
    "scipy==1.13.1",
    "spectres==2.2.0",
    "tabulate==0.9.0",
    "threadpoolctl==3.5.0",
    "torch==2.2.2",
    "torchdiffeq==0.2.4",
    "tqdm==4.66.4",
    "ultranest==4.2.0",
    "wandb>=0.17.1",
]

# Additional optional dependencies
[project.optional-dependencies]

# Development dependencies
dev = [
    "coverage",
    "ipython",
    "jupyter",
    "mypy",
    "pytest",
    "pytest-cov",
    "ruff",
    "toml~=0.10.2",
    "types-pyyaml",
    "types-tabulate",
    "types-toml",
]

# petitRADTRANS can be tricky to install, so we keep it separate
# Note: petitRADTRANS 2.7.x seems to give the exact same results in our tests
# but introduces a weird runtime degradation in our nested sampling code that
# basically makes it unusable...
# Note: petitRADTRANS 3.x introduces major breaking changes that would require
# updating the whole simulator code, so we stick to 2.6.7 for now.
petitRADTRANS = [
    "mpi4py==3.1.6",
    "petitRADTRANS==2.6.7",
]

# PyMultiNest is also a bit tricky to install (see docs for pre-requisites)
# Note: It will automatically be installed by petitRADTRANS, however
PyMultiNest = [
    "pymultinest==2.12",
]


# -----------------------------------------------------------------------------
# TOOL CONFIGURATION
# -----------------------------------------------------------------------------

[tool.mypy]
python_version = "3.10"
warn_unused_ignores = true
warn_unused_configs = true
warn_return_any = true
warn_redundant_casts = true
warn_unreachable = false
ignore_missing_imports = true
disallow_untyped_calls = true
no_implicit_optional = true
disallow_untyped_defs = true


[tool.pyright]
pythonVersion = "3.10"
reportPrivateImportUsage = "none"


[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning",
]
testpaths = [
    "tests",
]
markers = [  # deselect tests with -m "not <marker>"
    "integration_test: integration tests (which are usually slow)",
    "slow: unit tests that are slow",
]


[tool.ruff]
lint.select = [
    "B",    # flake8-bugbear rules
    "E",    # pycodestyle rules
    "F",    # Pyflakes rules
    "I",    # isort rules
    "NPY",  # numpy rules
    "SIM",  # flake8-simplify rules
]
lint.ignore = [
    "B019",    # "Use of functools.lru_cache can lead to memory leaks"
    "B028",    # "No explicit `stacklevel` keyword argument found"
    "SIM112",  # "Use capitalized environment variable"
]
line-length = 79
target-version = "py310"

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 72
quote-style = "preserve"


[tool.setuptools]
packages = ["fm4ar"]
