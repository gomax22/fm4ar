# -----------------------------------------------------------------------------
# BUILD SYSTEM
# -----------------------------------------------------------------------------

[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools >=64.0.0",
    "wheel >=0.40.0",
]


# -----------------------------------------------------------------------------
# PROJECT AND DEPENDENCIES
# -----------------------------------------------------------------------------

# General project settings and dependencies
[project]
name = "fm4ar"
version = "0.0.1"
description = "Flow matching for atmospheric retrievals of exoplanets."
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "chainconsumer>=1.0.0",
    "click",
    "corner",
    "deepdiff",
    "dill",
    "dynesty==2.1.3",
    "frozendict",
    "gitpython",
    "glasflow~=0.2.0",
    "h5py",
    "joblib",
    "matplotlib",
    "multiprocess",
    "nautilus-sampler~=1.0.0",
    "normflows",
    "numpy",
    "p_tqdm",
    "pandas",
    "pydantic>=2.0.0",
    "pyyaml",
    "scipy",
    "spectres~=2.2.0",
    "threadpoolctl",
    "torch~=2.2.0",
    "torchdiffeq~=0.2.3",
    "tqdm",
    "wandb",
]

# Additional optional dependencies
[project.optional-dependencies]

# Development dependencies
dev = [
    "coverage",
    "ipython",
    "jupyter",
    "mypy",
    "pytest",
    "pytest-cov",
    "ruff",
    "toml~=0.10.2",
    "types-pyyaml",
    "types-toml",
]

# petitRADTRANS can be tricky to install, so we keep it separate
# Note: petitRADTRANS 2.7.x seems to give the exact same results in our tests
# but introduces a weird runtime degradation in our nested sampling code that
# basically makes it unusable...
petitRADTRANS = [
    "mpi4py",
    "petitRADTRANS==2.6.7",
]

# PyMultiNest is also a bit tricky to install (see docs for pre-requisites)
# Note: It will automatically be installed by petitRADTRANS, however
PyMultiNest = [
    "pymultinest",
]


# -----------------------------------------------------------------------------
# TOOL CONFIGURATION
# -----------------------------------------------------------------------------

[tool.mypy]
python_version = "3.10"
warn_unused_ignores = true
warn_unused_configs = true
warn_return_any = true
warn_redundant_casts = true
warn_unreachable = false
ignore_missing_imports = true
disallow_untyped_calls = true
no_implicit_optional = true
disallow_untyped_defs = true


[tool.pyright]
pythonVersion = "3.10"
reportPrivateImportUsage = "none"


[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning",
]
testpaths = [
    "tests",
]
markers = [  # deselect tests with -m "not <marker>"
    "integration_test: integration tests (which are usually slow)",
    "slow: unit tests that are slow",
]


[tool.ruff]
lint.select = [
    "E",  # pycodestyle rules
    "F",  # Pyflakes rules
    "B",  # flake8-bugbear rules
]
lint.ignore = [
    "B019",  # "Use of functools.lru_cache can lead to memory leaks"
    "B028",  # "No explicit `stacklevel` keyword argument found"
]
line-length = 79
target-version = "py310"

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 72
quote-style = "preserve"


[tool.setuptools]
packages = ["fm4ar"]
